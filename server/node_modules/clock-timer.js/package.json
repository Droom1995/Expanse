{
  "_args": [
    [
      {
        "raw": "clock-timer.js@^1.0.0",
        "scope": null,
        "escapedName": "clock-timer.js",
        "name": "clock-timer.js",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/droom/Projects/WebstormProjects/LD35/server"
    ]
  ],
  "_from": "clock-timer.js@>=1.0.0 <2.0.0",
  "_id": "clock-timer.js@1.1.4",
  "_inCache": true,
  "_location": "/clock-timer.js",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/clock-timer.js-1.1.4.tgz_1468162695723_0.7874132103752345"
  },
  "_npmUser": {
    "name": "endel",
    "email": "endel.dreyer@gmail.com"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "clock-timer.js@^1.0.0",
    "scope": null,
    "escapedName": "clock-timer.js",
    "name": "clock-timer.js",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/clock-timer.js/-/clock-timer.js-1.1.4.tgz",
  "_shasum": "6076243e8c3713af7211a438c7bd78ae67516e55",
  "_shrinkwrap": null,
  "_spec": "clock-timer.js@^1.0.0",
  "_where": "/home/droom/Projects/WebstormProjects/LD35/server",
  "author": {
    "name": "Endel Dreyer"
  },
  "bugs": {
    "url": "https://github.com/gamestdio/clock-timer.js/issues"
  },
  "dependencies": {
    "clock.js": "^1.1.5"
  },
  "description": "Timing Events tied to clock.js",
  "devDependencies": {
    "assert": "^1.3.0",
    "mocha": "^2.3.4",
    "rimraf": "^2.5.2",
    "typescript": "^1.8.10"
  },
  "directories": {},
  "dist": {
    "shasum": "6076243e8c3713af7211a438c7bd78ae67516e55",
    "tarball": "https://registry.npmjs.org/clock-timer.js/-/clock-timer.js-1.1.4.tgz"
  },
  "gitHead": "cd4ee23293c1325a279123f791a436f3f10e7080",
  "homepage": "https://github.com/gamestdio/clock-timer.js#readme",
  "keywords": [
    "clock",
    "timer",
    "timer-events",
    "interval",
    "timeout",
    "deltatime"
  ],
  "license": "MIT",
  "main": "./dist/index.js",
  "maintainers": [
    {
      "name": "endel",
      "email": "endel.dreyer@gmail.com"
    }
  ],
  "name": "clock-timer.js",
  "optionalDependencies": {},
  "readme": "# clock-timer.js [![Build Status](https://secure.travis-ci.org/gamestdio/clock-timer.js.png?branch=master)](http://travis-ci.org/gamestdio/clock-timer.js)\n\nTiming Events tied to [clock.js](https://github.com/gamestdio/clock.js).\n\n`ClockTimer` is a subclass of `Clock`, which adds methods to handle timeout and\nintervals relying on `Clock`'s ticks.\n\n## Why?\n\nOnce built-in `setTimeout` and `setInterval` relies on CPU load, functions may\ndelay an unexpected amount of time to execute. Having it tied to a clock's time\nis guaranteed to execute in a precise way.\n\nHere's a quote from [W3C Timers Specification](http://www.w3.org/TR/2011/WD-html5-20110525/timers.html):\n\n> This API does not guarantee that timers will fire exactly on schedule.  Delays\n> due to CPU load, other tasks, etc, are to be expected.\n\n## API\n\n**Clock**\n\n- `setInterval(handler, time, ...args)` -> `Delayed`\n- `setTimeout(handler, time, ...args)` -> `Delayed`\n\n**Delayed**\n\n- `active` -> `Boolean` - Is it still active?\n- `clear()` -> `void` - Clear timeout/interval\n- `reset()` -> `void` - Reset elapsed time\n- (private) `tick(deltaTime)` -> `void`\n- (private) `execute()` -> `void`\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gamestdio/clock-timer.js.git"
  },
  "scripts": {
    "prepublish": "rimraf ./dist && tsc -d",
    "test": "npm run prepublish && mocha"
  },
  "typings": "./dist/index.d.ts",
  "version": "1.1.4"
}
